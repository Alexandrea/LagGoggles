buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}
boolean isSponge = hasProperty("isSponge")
boolean isClient = hasProperty("isClient")
String buildType = (isSponge ? "SPONGEFORGE" : "FORGE")
println("Compiling: " + buildType)

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

repositories {
    maven {
        name = "sponge"
        url = "http://repo.spongepowered.org/maven/"
    }
}

if(isClient == false) {
    delete fileTree('run/mods') {
        include 'LagGoggles*'
    }
    delete fileTree('run 1.10.2/mods') {
        include 'LagGoggles*'
    }
}

version = "1.10.2-3.0"
group= "cf.terminator.laggoggles" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LagGoggles-" + buildType

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"


    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-XDignore.symbol.file"
}

minecraft {
    version = "1.10.2-12.18.3.2477"
    runDir = "run"

    replaceIn "Main.java"
    replace '${version}', buildType + "-" + project.version
    mappings = "snapshot_20161111"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    if(isSponge) {
        compile 'org.spongepowered:mixin:0.6.15-SNAPSHOT'
    }else{
        embed('org.spongepowered:mixin:0.7.5-SNAPSHOT') {
            exclude module: 'launchwrapper'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "WORLDSERVER", isSponge ? 'MixinWorldServerSponge' : 'MixinWorldServer'

    // replace stuff
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'mixins.laggoggles.json'
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'WORLDSERVER':(isSponge ? 'MixinWorldServerSponge' : 'MixinWorldServer')
    }

    // copy everything else, thats not the mcmod.info or mixins.laggoggles.json
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'mixins.laggoggles.json'
    }

}

sourceSets {
    main {
        refMap = "mixins.laggoggles.refmap.json"
    }
}

jar {
    from configurations.embed.collect {
        if(it.isDirectory()){
            return it
        }else{
            FileTree tmp = zipTree(it)
            for(File s : tmp.files) {
                if (s.toString().endsWith(".html")){
                    System.out.println("File " + s + " removed")
                    tmp.files.remove(s)
                }
            }
            return tmp
        }

    }
    rename 'LICENSE.txt', 'LICENSE-mixin.txt'
    from ('LICENSE.md')
    manifest.attributes(
            'FMLCorePluginContainsFMLMod': 'true',
            'MixinConfigs': 'mixins.laggoggles.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': '0',
            'ForceLoadAsMod': 'true'
    )
}

task finalize << {
    if(isClient == false) {
        println("Copied " + jar.archivePath + " into run/mods")
        copy {
            from jar.archivePath
            into "run/mods"
        }
        copy {
            from jar.archivePath
            into "run 1.10.2/mods"
        }
    }
}

build.finalizedBy(finalize)